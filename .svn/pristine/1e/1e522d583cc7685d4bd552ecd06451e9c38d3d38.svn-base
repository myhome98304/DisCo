package disco.ReGroup;

import java.io.IOException;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.output.MultipleOutputs;

public class Regroup_calc_reducer extends
		Reducer<IntWritable, Text, IntWritable, Text> {
	MultipleOutputs<IntWritable, Text> mos;
	String job;

	@Override
	protected void cleanup(
			Reducer<IntWritable, Text, IntWritable, Text>.Context context)
			throws IOException, InterruptedException {
		// TODO Auto-generated method stub
		mos.close();
	}

	@Override
	protected void reduce(IntWritable arg0, Iterable<Text> arg1,
			Reducer<IntWritable, Text, IntWritable, Text>.Context arg2)
			throws IOException, InterruptedException {
		// TODO Auto-generated method stub
		for (Text line : arg1) {
			if (line.toString().startsWith(job))
				mos.write(arg0, line, "assign1");

			else
				mos.write(arg0, line, "assign2");
		}
	}

	@Override
	protected void setup(
			Reducer<IntWritable, Text, IntWritable, Text>.Context context)
			throws IOException, InterruptedException {
		// TODO Auto-generated method stub
		job = context.getConfiguration().get("job", "");
		mos = new MultipleOutputs<IntWritable, Text>(context);
	}

}
